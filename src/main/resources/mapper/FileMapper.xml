<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.onlineplatform.proincorruptiblealliance.mapper.FileMapper">
  <resultMap id="BaseResultMap" type="com.onlineplatform.proincorruptiblealliance.entity.File">
    <id column="file_id" jdbcType="VARCHAR" property="fileId" />
    <result column="file_name" jdbcType="VARCHAR" property="fileName" />
    <result column="belong_item_id" jdbcType="VARCHAR" property="belongItemId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.onlineplatform.proincorruptiblealliance.entity.File">
    <result column="content" jdbcType="LONGVARBINARY" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    file_id, file_name, belong_item_id
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.onlineplatform.proincorruptiblealliance.entity.FileExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from file
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.onlineplatform.proincorruptiblealliance.entity.FileExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from file
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from file
    where file_id = #{fileId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from file
    where file_id = #{fileId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.onlineplatform.proincorruptiblealliance.entity.FileExample">
    delete from file
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.onlineplatform.proincorruptiblealliance.entity.File">
    insert into file (file_id, file_name, belong_item_id, 
      content)
    values (#{fileId,jdbcType=VARCHAR}, #{fileName,jdbcType=VARCHAR}, #{belongItemId,jdbcType=VARCHAR}, 
      #{content,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="com.onlineplatform.proincorruptiblealliance.entity.File">
    insert into file
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="fileId != null">
        file_id,
      </if>
      <if test="fileName != null">
        file_name,
      </if>
      <if test="belongItemId != null">
        belong_item_id,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="fileId != null">
        #{fileId,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null">
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="belongItemId != null">
        #{belongItemId,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.onlineplatform.proincorruptiblealliance.entity.FileExample" resultType="java.lang.Long">
    select count(*) from file
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update file
    <set>
      <if test="record.fileId != null">
        file_id = #{record.fileId,jdbcType=VARCHAR},
      </if>
      <if test="record.fileName != null">
        file_name = #{record.fileName,jdbcType=VARCHAR},
      </if>
      <if test="record.belongItemId != null">
        belong_item_id = #{record.belongItemId,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update file
    set file_id = #{record.fileId,jdbcType=VARCHAR},
      file_name = #{record.fileName,jdbcType=VARCHAR},
      belong_item_id = #{record.belongItemId,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update file
    set file_id = #{record.fileId,jdbcType=VARCHAR},
      file_name = #{record.fileName,jdbcType=VARCHAR},
      belong_item_id = #{record.belongItemId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.onlineplatform.proincorruptiblealliance.entity.File">
    update file
    <set>
      <if test="fileName != null">
        file_name = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="belongItemId != null">
        belong_item_id = #{belongItemId,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where file_id = #{fileId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.onlineplatform.proincorruptiblealliance.entity.File">
    update file
    set file_name = #{fileName,jdbcType=VARCHAR},
      belong_item_id = #{belongItemId,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARBINARY}
    where file_id = #{fileId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.onlineplatform.proincorruptiblealliance.entity.File">
    update file
    set file_name = #{fileName,jdbcType=VARCHAR},
      belong_item_id = #{belongItemId,jdbcType=VARCHAR}
    where file_id = #{fileId,jdbcType=VARCHAR}
  </update>
</mapper>